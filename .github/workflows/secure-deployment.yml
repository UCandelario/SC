name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para análisis de relevancia

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest coverage safety truffleHog

      - name: Run unit tests with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term

      - name: Check coverage threshold (mínimo 80%)
        run: |
          COVERAGE=$(coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')
          echo "Coverage actual: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Coverage menor al 80%. Fallando..."
            exit 1
          fi

      - name: Check vulnerable dependencies
        run: |
          safety check || true  # No rompe si falla, solo muestra

      - name: Scan secrets with TruffleHog
        run: |
          trufflehog filesystem . || true

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
